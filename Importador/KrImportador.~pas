unit KrImportador;

interface

uses
  Classes;

type
  ILeitor = Interface
  ['{A05F12A1-D8FF-48D2-B039-01A4A7CEECA6}']
    procedure LerArquivo(Filename: String);
  end;

  TClasseBase = class(TPersistent)
  private
    function _AddRef: Integer; stdcall;
    function _Release: Integer; stdcall;
    function QueryInterface(const IID: TGUID; out Obj): HRESULT; stdcall;
  end;

  TLeitorCSV = class(TClasseBase, ILeitor)
  private
    Registro: String;
    procedure PopularObjetoComRegistro;
    function TokenN(aTokenList: String; aIndex: Integer; aTokenSeparator: char = ';'): String;
  published
    procedure LerArquivo(Filename: String);
  end;

  TObjeto = class
  public
    CodServico: String;
    CPFCliente: String;
    CNPJRepresentante: String;
    Valor: Double;
  end;

implementation

uses SysUtils;

{ TLeitorCSV }

procedure TLeitorCSV.LerArquivo(Filename: String);
var
  Arquivo: Textfile;
begin
  AssignFile(Arquivo, FileName);
  try
    Reset(Arquivo);
    while not Eof(Arquivo) do
    begin
      Readln(Arquivo, Registro);
      PopularObjetoComRegistro;
    end;
  finally
    CloseFile(Arquivo);
  end;
end;

procedure TLeitorCSV.PopularObjetoComRegistro;
var
  Objeto: TObjeto;
begin
  Objeto:= TObjeto.Create;
  Objeto.CodServico := TokenN(Registro, 1);
  Objeto.CPFCliente := TokenN(Registro, 15);
  Objeto.CNPJRepresentante := TokenN(Registro, 9);
  Objeto.Valor := StrToFloatDef(TokenN(Registro, 3), 0);
end;

{ TClasseBase }

function TClasseBase._AddRef: Integer;
begin
  Result := 0;
end;

function TClasseBase._Release: Integer;
begin
  Result := 0;
end;

function TClasseBase.QueryInterface(const IID: TGUID; out Obj): HRESULT;
begin
  Result := 0;
end;

function TLeitorCSV.TokenN(aTokenList: String; aIndex: Integer; aTokenSeparator: char = ';'): String;
var
  i,m,count:integer;
begin
  Result:='';
  count:=0;
  i:=1;
  while i<=Length(aTokenList) do
  begin
    m:=i;
    while (i<=Length(aTokenList)) and (aTokenList[i]<>aTokenSeparator) do
      Inc(i);
    Inc(count);
    if count=aIndex then
    begin
      Result:=Copy(aTokenList,m,i-m);
      Break;
    end;
    Inc(i);
  end;
end;

end.
